---
import Layout from "../../layouts/Layout.astro";
import type { SanityDocument } from "@sanity/client";
import { loadQuery } from "../../sanity/lib/load-query";
import PortableText from "../../components/PortableText.astro";
import PortableTextSlots from "../../components/PortableTextSlots.astro";
import type { Article } from "../../../sanity.types";

export const prerender = true;

export async function getStaticPaths() {
  const { data: slugs } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "article" && defined(slug.current)]{
      "slug": slug.current
    }`,
  });

  return slugs.map(({ slug }) => ({
    params: { slug },
  }));
}

const { params } = Astro; // Dynamic slug from the URL
const { data: article } = await loadQuery<Article>({
  query: `*[_type == "article" && slug.current == $slug][0]{
    title,
    author[]->{
      name,
      role,
      image{
        asset->{
          url
        },
        alt
      },
      socials
    },
    publishedAt,
    sections[]{
      header{
        displayTitle
      },
      content,
      image{
        sectionImage{
          asset->{
            url
          },
          alt,
          caption,
          imagePosition
        }
      }
    },
    mainImage{
      image{
        asset->{
          url
        },
        alt
      }
    }
  }`,
  params: { slug: params.slug },
});
---

<Layout>
  <article>
    <div class="flex flex-row">
      <header
        class="w-[50%] bg-[#18453B] p-20 text-white flex flex-col gap-10 justify-center items-center"
      >
        <h2 class="text-center text-5xl">{article.title}</h2>
        {
          article.mainImage &&
            article.author!.length > 0 &&
            article.author!.map((author) => (
              <div class=" flex flex-row gap-3 max-w-[300px] text-wrap">
                {console.log(author)}
                {author.image && author.image ? (
                  <img
                    class=" rounded-full"
                    src={author.image.asset?.url}
                    alt={author.image.alt}
                    width="50"
                  />
                ) : (
                  <div class=" bg-slate-600 w-[50px] h-[50px] rounded-full" />
                )}
                <div class=" flex flex-col">
                  <h3 class=" text-lg">{author.name}</h3>
                  <p class=" text-[#008934] text-sm">{author.role}</p>
                </div>
              </div>
            ))
        }
      </header>
      {
        article.mainImage && (
          <div class="relative w-full max-w-[50%] h-[500px] overflow-hidden bg-gray-200">
            <img
              src={article.mainImage.image?.asset?.url}
              alt={article.mainImage.image?.alt}
              class="w-full h-full object-cover object-center"
            />
          </div>
        )
      }
    </div>
    <section class="px-[10vw] py-5 flex flex-col">
      {
        !article.mainImage &&
          article.author!.length > 0 &&
          article.author!.map((author) => (
            <div class=" flex flex-row gap-3 max-w-[300px] text-wrap">
              {author.image ? (
                <img
                  class=" rounded-full"
                  src={author.image.asset?.url}
                  alt={author.image.alt}
                  width="50"
                />
              ) : (
                <div class=" bg-slate-600 w-[50px] h-[50px] rounded-full" />
              )}
              <div class=" flex flex-col">
                <h3 class=" text-lg">{author.name}</h3>
                <p class=" text-[#008934] text-sm">{author.role}</p>
              </div>
            </div>
          ))
      }
      <div class="flex w-full p-10">
        <!-- Sticky Navbar -->
        {
          (article.sections ?? []).filter(
            (section) => section.header?.displayTitle
          ).length > 0 && (
            <nav class="w-[1000px] p-5 mx-10 bg-white sticky top-1/4 self-start navbar">
              <h3 class=" text-2xl text-[#18453B]">Contents</h3>
              <ul class="flex flex-col gap-2 text-slate-500">
                {article.sections?.map((section, index) => (
                  <li>
                    {section.header?.displayTitle && (
                      <a
                        href={`#section-${index}`}
                        class=" hover:text-[008934] transition text-sm"
                      >
                        {section.header.displayTitle}
                      </a>
                    )}
                  </li>
                ))}
              </ul>
            </nav>
          )
        }

        <div class="flex flex-col justify-center items-center gap-5">
          {
            article.sections &&
              article.sections.map((section, index) => (
                <>
                  {!section.image?.sectionImage?.asset && (
                    <>
                      {section.header?.displayTitle && (
                        <h2
                          id={`section-${index}`}
                          class=" text-3xl my-2 w-full text-left section"
                        >
                          {section.header.displayTitle}
                        </h2>
                      )}
                      <PortableText portableText={section.content} />
                    </>
                  )}
                  {section.image?.sectionImage?.imagePosition?.replace(
                    /[^\x20-\x7E]/g,
                    ""
                  ) === "top" && (
                    <div class=" flex flex-col gap-5">
                      <div>
                        <img
                          src={section.image.sectionImage.asset?.url}
                          alt={section.image.sectionImage.alt}
                          class="w-full"
                        />
                        {section.image.sectionImage.caption && (
                          <p class=" text-center text-sm mb-5">
                            {section.image.sectionImage.caption}
                          </p>
                        )}
                      </div>
                      {section.header?.displayTitle && (
                        <h2
                          id={`section-${index}`}
                          class=" text-3xl my-2 section"
                        >
                          {section.header.displayTitle}
                        </h2>
                      )}
                      <PortableText portableText={section.content} />
                    </div>
                  )}

                  {section.image?.sectionImage?.imagePosition?.replace(
                    /[^\x20-\x7E]/g,
                    ""
                  ) === "bottom" && (
                    <div class=" flex flex-col gap-5">
                      {section.header?.displayTitle && (
                        <h2
                          id={`section-${index}`}
                          class=" text-3xl my-2 section"
                        >
                          {section.header.displayTitle}
                        </h2>
                      )}
                      <PortableText portableText={section.content} />
                      <div>
                        <img
                          src={section.image.sectionImage.asset?.url}
                          alt={section.image.sectionImage.alt}
                          class="w-full"
                        />
                        {section.image.sectionImage.caption && (
                          <p class=" text-center text-sm mb-5">
                            {section.image.sectionImage.caption}
                          </p>
                        )}
                      </div>
                    </div>
                  )}

                  {section.image?.sectionImage?.imagePosition?.replace(
                    /[^\x20-\x7E]/g,
                    ""
                  ) === "left" && (
                    <div class=" flex flex-row gap-5 w-full justify-evenly">
                      <div class=" w-1/2">
                        {section.header?.displayTitle && (
                          <h2
                            id={`section-${index}`}
                            class=" text-3xl my-2 section"
                          >
                            {section.header.displayTitle}
                          </h2>
                        )}
                        <PortableText portableText={section.content} />
                      </div>
                      <div class=" max-w-[50%]">
                        <img
                          src={section.image.sectionImage.asset?.url}
                          alt={section.image.sectionImage.alt}
                          class="w-full"
                        />
                        {section.image.sectionImage.caption && (
                          <p class=" text-center text-sm mb-5">
                            {section.image.sectionImage.caption}
                          </p>
                        )}
                      </div>
                    </div>
                  )}

                  {section.image?.sectionImage?.imagePosition?.replace(
                    /[^\x20-\x7E]/g,
                    ""
                  ) === "right" && (
                    <div class=" flex flex-row-reverse gap-5 w-full justify-evenly">
                      <div class=" w-1/2">
                        {section.header?.displayTitle && (
                          <h2
                            id={`section-${index}`}
                            class=" section text-3xl my-2"
                          >
                            {section.header.displayTitle}
                          </h2>
                        )}
                        <PortableText portableText={section.content} />
                      </div>
                      <div class=" max-w-[50%]">
                        <img
                          src={section.image.sectionImage.asset?.url}
                          alt={section.image.sectionImage.alt}
                          class="w-full"
                        />
                        {section.image.sectionImage.caption && (
                          <p class=" text-center text-sm mb-5">
                            {section.image.sectionImage.caption}
                          </p>
                        )}
                      </div>
                    </div>
                  )}
                </>
              ))
          }
        </div>
      </div>
    </section>
  </article>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const navbarLinks = document.querySelectorAll(".navbar a");
    const sections = document.querySelectorAll(".section");

    const handleScroll = () => {
      let current = "";
      sections.forEach((section) => {
        const sectionElement = section as HTMLElement; // Cast to HTMLElement
        const sectionTop = sectionElement.offsetTop;
        if (window.scrollY >= sectionTop - 500) {
          current = section.getAttribute("id") as string;
        }
      });

      navbarLinks.forEach((link) => {
        link.classList.remove("text-[#008934]");
        if (link.getAttribute("href") === `#${current}`) {
          link.classList.add("text-[#008934]");
        }
      });
    };

    window.addEventListener("scroll", handleScroll);
  });
</script>
